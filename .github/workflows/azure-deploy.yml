name: Deploy to Azure App Service

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build React app
      run: npm run build
      
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
        
    - name: Install Python dependencies
      run: |
        cd backend
        pip install -r requirements.txt
        
    - name: Prepare deployment package
      run: |
        echo "Current directory: $(pwd)"
        echo "Creating deployment package structure..."
        
        # Ensure critical files exist and are executable
        if [ ! -f _startup.sh ]; then
          echo "ERROR: _startup.sh does not exist in root directory"
          exit 1
        fi
        
        chmod +x _startup.sh
        echo "_startup.sh permissions updated:"
        ls -la _startup.sh
        
        # Ensure wsgi.py exists in root
        if [ ! -f wsgi.py ]; then
          echo "ERROR: wsgi.py does not exist in root directory"
          exit 1
        fi
        
        # Ensure requirements.txt exists in root
        if [ ! -f requirements.txt ]; then
          echo "ERROR: requirements.txt does not exist in root directory"
          exit 1
        fi
        
        # Create a deployment directory
        mkdir -p deploy
        
        # Copy all necessary files to deployment directory
        cp -r build deploy/
        cp -r backend deploy/
        cp _startup.sh deploy/
        cp wsgi.py deploy/
        cp requirements.txt deploy/
        
        echo "Deployment package contents:"
        ls -la deploy/
        
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'rts-search-app'
        slot-name: 'production'
        package: ./deploy
